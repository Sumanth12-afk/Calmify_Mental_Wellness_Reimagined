name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: latest

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run unit tests
        run: npm test

  sonarqube:
    needs: lint-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=Sumanth12-afk_Calmify_Mental_Wellness_Reimagined
            -Dsonar.organization=sumanth12-afk
            -Dsonar.sources=.
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info


  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set lowercase image name
        run: echo "IMAGE_NAME_LOWER=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Show Docker daemon config (for debug)
        run: |
          if [ -f /etc/docker/daemon.json ]; then
          sudo cat /etc/docker/daemon.json
          else
          echo "No daemon.json found. Docker is using default settings."
          fi

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME_LOWER:$IMAGE_TAG .
        
  trivy-scan:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: Re-create lowercase image name
      run: echo "IMAGE_NAME_LOWER=ghcr.io/$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Authenticate Docker to GHCR for Trivy
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install wget apt-transport-https gnupg lsb-release -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy -y

    - name: Scan Docker image with Trivy (fail only on CRITICAL)
      run: trivy image --exit-code 1 --severity CRITICAL --format table --output trivy-report.txt $IMAGE_NAME_LOWER:$IMAGE_TAG

    - name: Upload Trivy Scan Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-report.txt

  deploy:
    needs: trivy-scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx (needed by KIND)
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Install KIND
      uses: helm/kind-action@v1.8.0
      with:
        version: v0.20.0

    - name: Get cluster info
      run: |
        kubectl cluster-info
        kubectl get nodes

    - name: Apply Kubernetes deployment
      run: |
        kubectl apply -f k8s/deployment.yaml
